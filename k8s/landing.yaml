apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: landing-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: landing-config
data:
  nginx.conf: |
    server {
        listen 80;
        server_name landing.example.com;

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: landing-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: landing-container
          image: nginx:latest
          volumeMounts:
            - name: landing-pvc
              mountPath: /usr/share/nginx/html
            - name: landing-config-volume
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
      volumes:
        - name: landing-pvc
          persistentVolumeClaim:
            claimName: landing-pvc
        - name: landing-config-volume
          configMap:
            name: landing-config
---
apiVersion: v1
kind: Service
metadata:
  name: landing-service
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: landing-ingress
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/frontend-entry-points: http,https
    traefik.ingress.kubernetes.io/redirect-entry-point: https
    traefik.ingress.kubernetes.io/redirect-permanent: "true"
spec:
  ingressClassName: traefik
  rules:
    - host: landing.example.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: landing-service
                port:
                  number: 80